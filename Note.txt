grep "npm.config.get" lib/npm.js
grep "npm.config.get" lib/**/*.js
grep --color "npm.config.get" lib/npm.js
grep --color -n "npm.config.get" lib/npm.js
grep --color -n -C 5 "npm.config.get" lib/npm.js        << show the context around the line.
grep --color -n -e "npm.config.[gs]et" lib/npm.js        << regrex expression, find 'npm.config.get' or 'npm.config.set' in the line
man grep

------------

curl https://example.com
curl https://swapi.co/api/people/1/
curl -i https://swapi.co/api/people/2
curl -i https://swapi.co/api/people/2/
curl -iL https://swapi.co/api/people/2
curl -iL https://swapi.co/api/people/2
curl -H "Authorization: Bearer 123" localhost:3000/api-protected/posts

curl -X POST -H "Content-Type: application/json" -d '{"title": "Curling", "author": "Cameron"}' localhost:3000/api/posts
curl localhost:3000/api/posts

curl -X POST --data-urlencode title="Curling again" --data-urlencode author="Cameron" http://localhost:3000/api/posts

curl -i -X PUT \
-d '{ "title": "Changed title" }' \
-H "Content-Type: application/json" \
http://localhost:3000/api/posts/2

curl -iL https://google.com -o google.txt
curl https://swapi.co/api/people/1/ | jsome

---------

Inside script.sh:
echo "$1 world"
In terminal:
./script.sh Howdy       << print "Howdy world"

echo "Initializing JS project at $(pwd)"
echo $PATH
which node
cp init-js.sh /usr/local/bin/init-js
which init-js


---------

var=123
export var      << This will make the var variable visible to all child processes, to all commands,
                   all scripts that are executed in the context of this shell. If we run script now,
                   we can see that it's visible, and that it echoed it out correctly.
./script.sh   (which contains echo $var)
unset var

env             << see all environment variables

---------

echo $?         << exit statuses in bash. 0: OK, 1: fail

---------

if [[ 1 -eq 1 ]]; then
if [[ 1 -ne 1 ]]; then
if [[ -e conditionals.sh ]]; then       << check if the file exist.
if [[ -z $USER ]]; then                 << check if the USER variable is empty.

curl -ILs https://example.org | head -n 1 | cut -d ' ' -f 2         << take a the staus code out from the first line.

---------

ps ax                           << all the running process
ps ax | grep Chrome | less
uglifyjs -c -m -- index.js      << I'm going to pass the compress and mangle flags. Then we do two dashes, and then the file name that we want to compress.
uglifyjs -c -m -- index.js | gzip -9 | wc -c

ls > ls.txt
echo "hi" >> ls.txt         << append
